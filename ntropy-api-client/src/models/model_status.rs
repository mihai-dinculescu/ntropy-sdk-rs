/*
 * Ntropy Transaction API
 *
 * The world's most powerful, multi-geo, multi-lingual transaction categorization API.
 *
 * The version of the OpenAPI document:
 * Contact: api@ntropy.com
 * Generated by: https://openapi-generator.tech
 */

/// ModelStatus : The status of a model that is being trained.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ModelStatus {
    #[serde(rename = "name")]
    pub name: Option<String>,
    #[serde(rename = "progress", skip_serializing_if = "Option::is_none")]
    pub progress: Option<f64>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

impl ModelStatus {
    /// The status of a model that is being trained.
    pub fn new(name: Option<String>) -> ModelStatus {
        ModelStatus {
            name,
            progress: None,
            status: None,
        }
    }
}
