/*
 * Ntropy Transaction API
 *
 * The world's most powerful, multi-geo, multi-lingual transaction categorization API.
 *
 * The version of the OpenAPI document:
 * Contact: api@ntropy.com
 * Generated by: https://openapi-generator.tech
 */

/// AccountHolderMetricsQueryResult : Metrics query result for an account holder

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AccountHolderMetricsQueryResult {
    #[serde(rename = "overall_stats", skip_serializing_if = "Option::is_none")]
    pub overall_stats: Option<Box<crate::models::AccountHolderOverallStatsMetric>>,
    #[serde(rename = "stats_by_label", skip_serializing_if = "Option::is_none")]
    pub stats_by_label: Option<
        ::std::collections::HashMap<
            String,
            crate::models::AccountHolderMetricsQueryResultStatsByLabelValue,
        >,
    >,
    #[serde(rename = "stats_by_merchant", skip_serializing_if = "Option::is_none")]
    pub stats_by_merchant: Option<
        ::std::collections::HashMap<
            String,
            crate::models::AccountHolderMetricsQueryResultStatsByLabelValue,
        >,
    >,
}

impl AccountHolderMetricsQueryResult {
    /// Metrics query result for an account holder
    pub fn new() -> AccountHolderMetricsQueryResult {
        AccountHolderMetricsQueryResult {
            overall_stats: None,
            stats_by_label: None,
            stats_by_merchant: None,
        }
    }
}
